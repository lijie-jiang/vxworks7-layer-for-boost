
diff -uNdr boost_1_59_0/boost/chrono/io/duration_get.hpp boost_1_59_0//boost/chrono/io/duration_get.hpp
--- boost_1_59_0/boost/chrono/io/duration_get.hpp	2015-03-16 18:40:45.000000000 +0000
+++ boost_1_59_0//boost/chrono/io/duration_get.hpp	2016-05-22 21:31:27.202993900 +0000
@@ -45,12 +45,14 @@
             is_signed<Rep>::value, long long, unsigned long long>::type>::type type;
       };
 
+#ifdef BOOST_CHRONO_HAS_PROCESS_CLOCKS      
       template <class Rep>
       struct duration_io_intermediate<process_times<Rep>, false>
       {
         typedef process_times<typename duration_io_intermediate<Rep>::type> type;
       };
-
+#endif
+      
       template <typename intermediate_type>
       typename enable_if<is_integral<intermediate_type> , bool>::type reduce(intermediate_type& r,
           unsigned long long& den, std::ios_base::iostate& err)
@@ -374,6 +376,8 @@
       {
         return std::use_facet<std::num_get<CharT, iter_type> >(ios.getloc()).get(s, end, ios, err, r);
       }
+
+#ifdef BOOST_CHRONO_HAS_PROCESS_CLOCKS
       template <typename Rep>
       iter_type get_value(iter_type s, iter_type end, std::ios_base& ios, std::ios_base::iostate& err, process_times<Rep>& r) const
       {
@@ -413,7 +417,8 @@
         }
         return s;
       }
-
+#endif 
+      
       /**
        *
        * @param s start input stream iterator
diff -uNdr boost_1_59_0/boost/chrono/io/duration_put.hpp ../workspace/VSB64/usr/src/BOOST/boost_1_59_0/boost/chrono/io/duration_put.hpp
--- boost_1_59_0/boost/chrono/io/duration_put.hpp	2015-03-16 18:40:45.000000000 +0000
+++ boost_1_59_0//boost/chrono/io/duration_put.hpp	2016-05-22 21:33:38.138652300 +0000
@@ -212,6 +212,7 @@
             static_cast<typename detail::propagate<Rep>::type> (d.count()));
       }
 
+#ifdef BOOST_CHRONO_HAS_PROCESS_CLOCKS
       template <typename Rep, typename Period>
       iter_type put_value(iter_type s, std::ios_base& ios, char_type fill, duration<process_times<Rep>, Period> const& d, const char_type* = 0) const
       {
@@ -224,7 +225,7 @@
         *s++ = CharT('}');
         return s;
       }
-
+#endif
       /**
        *
        * @param s an output stream iterator
@@ -274,6 +275,7 @@
         }
         return s;
       }
+#ifdef BOOST_CHRONO_HAS_PROCESS_CLOCKS      
       template <typename Rep, typename Period>
       iter_type put_unit(duration_units<CharT> const& facet, iter_type s, std::ios_base& ios, char_type fill,
           duration<process_times<Rep>, Period> const& d) const
@@ -293,7 +295,7 @@
         }
         return s;
       }
-
+#endif
       /**
        * Unique identifier for this type of facet.
        */
diff -uNdr boost_1_59_0/boost/chrono/io/time_point_io.hpp ../workspace/VSB64/usr/src/BOOST/boost_1_59_0/boost/chrono/io/time_point_io.hpp
--- boost_1_59_0/boost/chrono/io/time_point_io.hpp	2015-03-16 18:40:45.000000000 +0000
+++ boost_1_59_0//boost/chrono/io/time_point_io.hpp	2016-05-22 00:34:32.227505200 +0000
@@ -40,6 +40,7 @@
   || (defined __IBMCPP__) \
   || defined __ANDROID__ \
   || defined __QNXNTO__ \
+  || defined __VXWORKS__ \
   || (defined(_AIX) && defined __GNUC__)
 
 #define  BOOST_CHRONO_INTERNAL_GMTIME \
diff -uNdr boost_1_59_0/libs/chrono/test/io/time_point_input.cpp ../workspace/VSB64/usr/src/BOOST/boost_1_59_0/libs/chrono/test/io/time_point_input.cpp
--- boost_1_59_0/libs/chrono/test/io/time_point_input.cpp	2015-03-16 18:40:45.000000000 +0000
+++ boost_1_59_0//libs/chrono/test/io/time_point_input.cpp	2016-05-22 21:48:50.127123400 +0000
@@ -153,7 +153,7 @@
 
 }
 
-#if ! BOOST_OS_WINDOWS || BOOST_PLAT_WINDOWS_DESKTOP
+#if (! BOOST_OS_WINDOWS || BOOST_PLAT_WINDOWS_DESKTOP ) && defined(BOOST_CHRONO_HAS_PROCESS_CLOCKS)
 void check_all_process_cpu_clock()
 {
   using namespace boost::chrono;
