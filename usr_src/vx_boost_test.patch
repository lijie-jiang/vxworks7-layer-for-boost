diff -uNdr boost_1_59_0/boost/test/impl/execution_monitor.ipp vx7/workspace/PowerPC_VSB/usr/src/BOOST/boost_1_59_0/boost/test/impl/execution_monitor.ipp
A bit of a hack to adapt to the much more limited feilds in signal than typical UNIX
--- boost_1_59_0/boost/test/impl/execution_monitor.ipp	2015-07-21 14:41:49.000000000 -0700
+++ boost_1_59_0/boost/test/impl/execution_monitor.ipp	2016-01-20 09:47:53.603311793 -0800
@@ -66,7 +66,7 @@
 #endif
 
 // to use vsnprintf
-#if defined(__QNXNTO__)
+#if defined(__QNXNTO__) || defined(__VXWORKS__)
 #  include <stdio.h>
 #endif
 
@@ -314,7 +314,7 @@
 char const*
 typeid_name( T const& t )
 {
-#ifdef __GNUC__
+#if defined( __GNUC__) && !defined(__VXWORKS__) 
     int status;
 
     return abi::__cxa_demangle( typeid(t).name(), 0, 0, &status );
@@ -369,11 +369,16 @@
         return; // no error actually occur?
 
     switch( m_sig_info->si_code ) {
+#ifdef __VXWORKS__
+#define si_addr si_value.sival_int
+#define si_band si_value.sival_int
+#else    
     case SI_USER:
         report_error( execution_exception::system_error,
                       "signal: generated by kill() (or family); uid=%d; pid=%d",
                       (int)m_sig_info->si_uid, (int)m_sig_info->si_pid );
         break;
+#endif        
     case SI_QUEUE:
         report_error( execution_exception::system_error,
                       "signal: sent by sigqueue()" );
diff -uNdr boost_1_59_0/boost/test/utils/basic_cstring/basic_cstring.hpp vx7/workspace/PowerPC_VSB/usr/src/BOOST/boost_1_59_0/boost/test/utils/basic_cstring/basic_cstring.hpp
--- boost_1_59_0/boost/test/utils/basic_cstring/basic_cstring.hpp	2015-07-21 14:41:49.000000000 -0700
+++ boost_1_59_0/boost/test/utils/basic_cstring/basic_cstring.hpp	2016-01-20 23:01:49.567172011 -0800
@@ -60,7 +60,7 @@
 
     // !! should also present reverse_iterator, const_reverse_iterator
 
-#if !BOOST_WORKAROUND(__IBMCPP__, BOOST_TESTED_AT(600))
+#if !BOOST_WORKAROUND(__IBMCPP__, BOOST_TESTED_AT(600)) && !defined(__DCC__)
     enum npos_type { npos = static_cast<size_type>(-1) };
 #else
     // IBM/VisualAge version 6 is not able to handle enums larger than 4 bytes.
